<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fun Rollance Adventure Balls</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #87CEEB;
            font-family: Arial, sans-serif;
        }
        #qr-code {
            position: absolute;
            bottom: 10px;
            right: 10px;
            width: 150px;
            height: 150px;
            z-index: 100;
            border: 2px solid #fff;
            border-radius: 10px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3/dist/phaser.js"></script>
</head>
<body>
    <!-- QR Code Image -->
    <img id="qr-code" src="https://i.imgur.com/LkZfMOt.png" alt="Support Us on PayPal">

    <script>
        var config = {
            type: Phaser.AUTO,
            width: 800,
            height: 600,
            physics: {
                default: 'arcade',
                arcade: {
                    gravity: { y: 300 },
                    debug: false
                }
            },
            scene: {
                preload: preload,
                create: create,
                update: update
            }
        };

        var player;
        var cursors;
        var platforms;
        var stars;
        var score = 0;
        var scoreText;

        var game = new Phaser.Game(config);

        function preload() {
            this.load.image('ball', 'https://i.imgur.com/xzrhbh6.png');  // لینک مستقیم به تصویر
            this.load.image('ground', 'https://i.imgur.com/O4m7Jw7.png');  // لینک مستقیم به تصویر
            this.load.image('star', 'https://i.imgur.com/YkUDTld.png');  // لینک مستقیم به تصویر
            this.load.audio('jump', 'https://opengameart.org/sites/default/files/jump_11.wav');
            this.load.audio('collect', 'https://opengameart.org/sites/default/files/coin.wav');
        }

        function create() {
            platforms = this.physics.add.staticGroup();
            platforms.create(400, 568, 'ground').setScale(2).refreshBody();
            platforms.create(600, 400, 'ground');
            platforms.create(50, 250, 'ground');
            platforms.create(750, 220, 'ground');

            player = this.physics.add.sprite(100, 450, 'ball');
            player.setBounce(0.2);
            player.setCollideWorldBounds(true);

            this.physics.add.collider(player, platforms);

            stars = this.physics.add.group({
                key: 'star',
                repeat: 11,
                setXY: { x: 12, y: 0, stepX: 70 }
            });

            stars.children.iterate(function(child) {
                child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));
            });

            this.physics.add.collider(stars, platforms);
            this.physics.add.overlap(player, stars, collectStar, null, this);

            scoreText = this.add.text(16, 16, 'Score: 0', { fontSize: '32px', fill: '#fff' });

            cursors = this.input.keyboard.createCursorKeys();

            this.jumpSound = this.sound.add('jump');
            this.collectSound = this.sound.add('collect');
        }

        function update() {
            if (cursors.left.isDown) {
                player.setVelocityX(-160);
            } else if (cursors.right.isDown) {
                player.setVelocityX(160);
            } else {
                player.setVelocityX(0);
            }

            if (cursors.up.isDown && player.body.touching.down) {
                player.setVelocityY(-330);
                this.jumpSound.play();
            }
        }

        function collectStar(player, star) {
            star.disableBody(true, true);
            this.collectSound.play();
            score += 10;
            scoreText.setText('Score: ' + score);
        }
    </script>
</body>
</html>
